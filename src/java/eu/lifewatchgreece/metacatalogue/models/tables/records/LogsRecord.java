/**
 * This class is generated by jOOQ
 */
package eu.lifewatchgreece.metacatalogue.models.tables.records;


import eu.lifewatchgreece.metacatalogue.models.tables.Logs;

import java.sql.Timestamp;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LogsRecord extends UpdatableRecordImpl<LogsRecord> implements Record6<Integer, String, String, String, String, Timestamp> {

	private static final long serialVersionUID = 263067362;

	/**
	 * Setter for <code>metacatalogue.logs.id</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>metacatalogue.logs.id</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>metacatalogue.logs.user_email</code>.
	 */
	public void setUserEmail(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>metacatalogue.logs.user_email</code>.
	 */
	public String getUserEmail() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>metacatalogue.logs.action</code>.
	 */
	public void setAction(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>metacatalogue.logs.action</code>.
	 */
	public String getAction() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>metacatalogue.logs.message</code>.
	 */
	public void setMessage(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>metacatalogue.logs.message</code>.
	 */
	public String getMessage() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>metacatalogue.logs.related_dataset</code>.
	 */
	public void setRelatedDataset(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>metacatalogue.logs.related_dataset</code>.
	 */
	public String getRelatedDataset() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>metacatalogue.logs.when</code>.
	 */
	public void setWhen(Timestamp value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>metacatalogue.logs.when</code>.
	 */
	public Timestamp getWhen() {
		return (Timestamp) getValue(5);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record6 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, String, String, String, Timestamp> fieldsRow() {
		return (Row6) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row6<Integer, String, String, String, String, Timestamp> valuesRow() {
		return (Row6) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Logs.LOGS.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Logs.LOGS.USER_EMAIL;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Logs.LOGS.ACTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Logs.LOGS.MESSAGE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Logs.LOGS.RELATED_DATASET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Timestamp> field6() {
		return Logs.LOGS.WHEN;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getUserEmail();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getAction();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getMessage();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getRelatedDataset();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Timestamp value6() {
		return getWhen();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogsRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogsRecord value2(String value) {
		setUserEmail(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogsRecord value3(String value) {
		setAction(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogsRecord value4(String value) {
		setMessage(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogsRecord value5(String value) {
		setRelatedDataset(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogsRecord value6(Timestamp value) {
		setWhen(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public LogsRecord values(Integer value1, String value2, String value3, String value4, String value5, Timestamp value6) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached LogsRecord
	 */
	public LogsRecord() {
		super(Logs.LOGS);
	}

	/**
	 * Create a detached, initialised LogsRecord
	 */
	public LogsRecord(Integer id, String userEmail, String action, String message, String relatedDataset, Timestamp when) {
		super(Logs.LOGS);

		setValue(0, id);
		setValue(1, userEmail);
		setValue(2, action);
		setValue(3, message);
		setValue(4, relatedDataset);
		setValue(5, when);
	}
}
