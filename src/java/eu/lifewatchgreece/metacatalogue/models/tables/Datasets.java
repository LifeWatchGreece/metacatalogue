/**
 * This class is generated by jOOQ
 */
package eu.lifewatchgreece.metacatalogue.models.tables;


import eu.lifewatchgreece.metacatalogue.models.Keys;
import eu.lifewatchgreece.metacatalogue.models.Metacatalogue;
import eu.lifewatchgreece.metacatalogue.models.tables.records.DatasetsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Datasets extends TableImpl<DatasetsRecord> {

	private static final long serialVersionUID = 53131018;

	/**
	 * The reference instance of <code>metacatalogue.datasets</code>
	 */
	public static final Datasets DATASETS = new Datasets();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DatasetsRecord> getRecordType() {
		return DatasetsRecord.class;
	}

	/**
	 * The column <code>metacatalogue.datasets.id</code>.
	 */
	public final TableField<DatasetsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>metacatalogue.datasets.name</code>.
	 */
	public final TableField<DatasetsRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(250).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>metacatalogue.datasets.user_email</code>.
	 */
	public final TableField<DatasetsRecord, String> USER_EMAIL = createField("user_email", org.jooq.impl.SQLDataType.VARCHAR.length(120).nullable(false), this, "");

	/**
	 * The column <code>metacatalogue.datasets.created_at</code>.
	 */
	public final TableField<DatasetsRecord, Timestamp> CREATED_AT = createField("created_at", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>metacatalogue.datasets</code> table reference
	 */
	public Datasets() {
		this("datasets", null);
	}

	/**
	 * Create an aliased <code>metacatalogue.datasets</code> table reference
	 */
	public Datasets(String alias) {
		this(alias, DATASETS);
	}

	private Datasets(String alias, Table<DatasetsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Datasets(String alias, Table<DatasetsRecord> aliased, Field<?>[] parameters) {
		super(alias, Metacatalogue.METACATALOGUE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<DatasetsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_DATASETS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<DatasetsRecord> getPrimaryKey() {
		return Keys.KEY_DATASETS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DatasetsRecord>> getKeys() {
		return Arrays.<UniqueKey<DatasetsRecord>>asList(Keys.KEY_DATASETS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Datasets as(String alias) {
		return new Datasets(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Datasets rename(String name) {
		return new Datasets(name, null);
	}
}
