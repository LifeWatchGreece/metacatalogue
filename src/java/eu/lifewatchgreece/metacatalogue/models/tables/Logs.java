/**
 * This class is generated by jOOQ
 */
package eu.lifewatchgreece.metacatalogue.models.tables;


import eu.lifewatchgreece.metacatalogue.models.Keys;
import eu.lifewatchgreece.metacatalogue.models.Metacatalogue;
import eu.lifewatchgreece.metacatalogue.models.tables.records.LogsRecord;

import java.sql.Timestamp;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Logs extends TableImpl<LogsRecord> {

	private static final long serialVersionUID = -1689095204;

	/**
	 * The reference instance of <code>metacatalogue.logs</code>
	 */
	public static final Logs LOGS = new Logs();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<LogsRecord> getRecordType() {
		return LogsRecord.class;
	}

	/**
	 * The column <code>metacatalogue.logs.id</code>.
	 */
	public final TableField<LogsRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

	/**
	 * The column <code>metacatalogue.logs.user_email</code>.
	 */
	public final TableField<LogsRecord, String> USER_EMAIL = createField("user_email", org.jooq.impl.SQLDataType.VARCHAR.length(120).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>metacatalogue.logs.action</code>.
	 */
	public final TableField<LogsRecord, String> ACTION = createField("action", org.jooq.impl.SQLDataType.VARCHAR.length(50).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>metacatalogue.logs.message</code>.
	 */
	public final TableField<LogsRecord, String> MESSAGE = createField("message", org.jooq.impl.SQLDataType.VARCHAR.length(250), this, "");

	/**
	 * The column <code>metacatalogue.logs.related_dataset</code>.
	 */
	public final TableField<LogsRecord, String> RELATED_DATASET = createField("related_dataset", org.jooq.impl.SQLDataType.VARCHAR.length(250).defaulted(true), this, "");

	/**
	 * The column <code>metacatalogue.logs.when</code>.
	 */
	public final TableField<LogsRecord, Timestamp> WHEN = createField("when", org.jooq.impl.SQLDataType.TIMESTAMP.nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>metacatalogue.logs</code> table reference
	 */
	public Logs() {
		this("logs", null);
	}

	/**
	 * Create an aliased <code>metacatalogue.logs</code> table reference
	 */
	public Logs(String alias) {
		this(alias, LOGS);
	}

	private Logs(String alias, Table<LogsRecord> aliased) {
		this(alias, aliased, null);
	}

	private Logs(String alias, Table<LogsRecord> aliased, Field<?>[] parameters) {
		super(alias, Metacatalogue.METACATALOGUE, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<LogsRecord, Integer> getIdentity() {
		return Keys.IDENTITY_LOGS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<LogsRecord> getPrimaryKey() {
		return Keys.KEY_LOGS_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<LogsRecord>> getKeys() {
		return Arrays.<UniqueKey<LogsRecord>>asList(Keys.KEY_LOGS_PRIMARY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Logs as(String alias) {
		return new Logs(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Logs rename(String name) {
		return new Logs(name, null);
	}
}
