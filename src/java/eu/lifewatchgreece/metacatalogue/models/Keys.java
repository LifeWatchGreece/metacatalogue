/**
 * This class is generated by jOOQ
 */
package eu.lifewatchgreece.metacatalogue.models;


import eu.lifewatchgreece.metacatalogue.models.tables.Datasets;
import eu.lifewatchgreece.metacatalogue.models.tables.Logs;
import eu.lifewatchgreece.metacatalogue.models.tables.Settings;
import eu.lifewatchgreece.metacatalogue.models.tables.records.DatasetsRecord;
import eu.lifewatchgreece.metacatalogue.models.tables.records.LogsRecord;
import eu.lifewatchgreece.metacatalogue.models.tables.records.SettingsRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.jooq.types.UInteger;


/**
 * A class modelling foreign key relationships between tables of the <code>metacatalogue</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<DatasetsRecord, Integer> IDENTITY_DATASETS = Identities0.IDENTITY_DATASETS;
	public static final Identity<LogsRecord, Integer> IDENTITY_LOGS = Identities0.IDENTITY_LOGS;
	public static final Identity<SettingsRecord, UInteger> IDENTITY_SETTINGS = Identities0.IDENTITY_SETTINGS;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<DatasetsRecord> KEY_DATASETS_PRIMARY = UniqueKeys0.KEY_DATASETS_PRIMARY;
	public static final UniqueKey<LogsRecord> KEY_LOGS_PRIMARY = UniqueKeys0.KEY_LOGS_PRIMARY;
	public static final UniqueKey<SettingsRecord> KEY_SETTINGS_PRIMARY = UniqueKeys0.KEY_SETTINGS_PRIMARY;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<DatasetsRecord, Integer> IDENTITY_DATASETS = createIdentity(Datasets.DATASETS, Datasets.DATASETS.ID);
		public static Identity<LogsRecord, Integer> IDENTITY_LOGS = createIdentity(Logs.LOGS, Logs.LOGS.ID);
		public static Identity<SettingsRecord, UInteger> IDENTITY_SETTINGS = createIdentity(Settings.SETTINGS, Settings.SETTINGS.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<DatasetsRecord> KEY_DATASETS_PRIMARY = createUniqueKey(Datasets.DATASETS, Datasets.DATASETS.ID);
		public static final UniqueKey<LogsRecord> KEY_LOGS_PRIMARY = createUniqueKey(Logs.LOGS, Logs.LOGS.ID);
		public static final UniqueKey<SettingsRecord> KEY_SETTINGS_PRIMARY = createUniqueKey(Settings.SETTINGS, Settings.SETTINGS.ID);
	}
}
